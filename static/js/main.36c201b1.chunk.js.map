{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","addGood","item","setState","removeGood","filter","selected","clearAll","showMeWhatUGot","length","toString","endsWith","slice","join","this","className","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,MAAOH,EACPI,cAAe,CAAC,cAHpB,EAMEC,QAAU,SAACC,GACT,IAAQF,EAAkB,EAAKF,MAAvBE,cAER,EAAKG,SAAS,CAAEH,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,OATtD,EAYEE,WAAa,SAACF,GACZ,IAAQF,EAAkB,EAAKF,MAAvBE,cAER,EAAKG,SAAS,CAAEH,cAAeA,EAAcK,QAAO,SAAAC,GAAQ,OAAIA,IAAaJ,QAfjF,EAkBEK,SAAW,WACT,EAAKJ,SAAS,CAAEH,cAAe,MAnBnC,EAsBEQ,eAAiB,WACf,IAAQR,EAAkB,EAAKF,MAAvBE,cAER,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,wBACT,KAAK,EACH,OACET,EAAcU,WAAWC,SAAS,KAAlC,UACOX,EADP,2BAEOA,EAFP,gBAIJ,QACE,MAAM,GAAN,OACKA,EAAcY,MAAM,GAAI,GACxBC,KAAK,MAFV,6BAGMb,EAAcA,EAAcS,OAAS,GAH3C,mBAnCR,4CA2CE,WAAU,IAAD,OACP,EAAiCK,KAAKhB,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6BACGD,KAAKN,mBAEPR,EAAcS,OAAS,GAEpB,wBACEO,KAAK,SACLD,UAAU,iCACVE,QAAS,kBAAM,EAAKV,YAHtB,kBASN,oBAAIQ,UAAU,YAAd,SACGhB,EAAMmB,KAAI,SAAAhB,GAAI,OACb,qBAAea,UAAU,YAAzB,UACGb,EACD,wBACEc,KAAK,SACLD,UACEf,EAAcmB,SAASjB,GACnB,iBACA,oBAENe,QAAS,kBACPjB,EAAcmB,SAASjB,GACnB,EAAKE,WAAWF,GAChB,EAAKD,QAAQC,IAVrB,SAaGF,EAAcmB,SAASjB,GACpB,SACA,UAjBCA,eAjErB,GAAyBkB,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.36c201b1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  selectedGoods: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    selectedGoods: ['Dumplings'],\n  };\n\n  addGood = (item: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: [...selectedGoods, item] });\n  };\n\n  removeGood = (item: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: selectedGoods.filter(selected => selected !== item) });\n  };\n\n  clearAll = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  showMeWhatUGot = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No Goods are selected';\n      case 1:\n        return (\n          selectedGoods.toString().endsWith('s')\n            ? `${selectedGoods} are selected`\n            : `${selectedGoods} is selected`\n        );\n      default:\n        return (\n          `${selectedGoods.slice(0, -1)\n            .join(', ')} and\n            ${selectedGoods[selectedGoods.length - 1]} are selected`\n        );\n    }\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__header\">\n          <h1>\n            {this.showMeWhatUGot()}\n          </h1>\n          {selectedGoods.length > 0\n            && (\n              <button\n                type=\"button\"\n                className=\"App__button App__button--clear\"\n                onClick={() => this.clearAll()}\n              >\n                X\n              </button>\n            )}\n        </div>\n        <ul className=\"App__list\">\n          {goods.map(item => (\n            <li key={item} className=\"App__item\">\n              {item}\n              <button\n                type=\"button\"\n                className={\n                  selectedGoods.includes(item)\n                    ? 'App__item--add'\n                    : 'App__item--remove'\n                }\n                onClick={() => (\n                  selectedGoods.includes(item)\n                    ? this.removeGood(item)\n                    : this.addGood(item)\n                )}\n              >\n                {selectedGoods.includes(item)\n                  ? 'Remove'\n                  : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}